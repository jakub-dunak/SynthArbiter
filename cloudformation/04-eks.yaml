AWSTemplateFormatVersion: '2010-09-09'
Description: 'SynthArbiter - EKS Cluster Layer'

Parameters:
  ClusterName:
    Type: String
    Default: syntharbiter-cluster

Resources:
  # OIDC Provider for IRSA
  EKSOIDCProvider:
    Type: AWS::IAM::OIDCIdentityProvider
    Properties:
      Url: !GetAtt EKSCluster.Identity.Oidc.Issuer
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 9e99a48a9960b14926bb7f3b02e22da2b0ab7280

  # EKS Cluster
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      Version: '1.29'
      RoleArn: !ImportValue
        'Fn::Sub': '${IAM_STACK_NAME}-EKSClusterRoleArn'
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !ImportValue
            'Fn::Sub': '${NETWORK_STACK_NAME}-EKSClusterSecurityGroupId'
        SubnetIds:
          - !Split
              - ','
              - !ImportValue
                'Fn::Sub': '${NETWORK_STACK_NAME}-PrivateSubnetIds'
      EnabledClusterLogTypes:
        - api
        - audit
        - authenticator
        - controllerManager
        - scheduler

  # GPU Node Group
  GPUNodeGroup:
    Type: AWS::EKS::Nodegroup
    DependsOn: EKSCluster
    Properties:
      NodegroupName: gpu-node-group
      ClusterName: !Ref ClusterName
      NodeRole: !ImportValue
        'Fn::Sub': '${IAM_STACK_NAME}-EKSNodeRoleArn'
      InstanceTypes:
        - g5.xlarge
      ScalingConfig:
        DesiredSize: 2
        MinSize: 1
        MaxSize: 5
      DiskSize: 100
      Subnets:
        - !Split
            - ','
            - !ImportValue
              'Fn::Sub': '${NETWORK_STACK_NAME}-PrivateSubnetIds'
      Labels:
        workload: gpu-inference
      Taints:
        - Key: nvidia.com/gpu
          Value: 'true'
          Effect: NoSchedule
      UpdateConfig:
        MaxUnavailable: 1

  # CPU Node Group
  CPUNodeGroup:
    Type: AWS::EKS::Nodegroup
    DependsOn: EKSCluster
    Properties:
      NodegroupName: cpu-node-group
      ClusterName: !Ref ClusterName
      NodeRole: !ImportValue
        'Fn::Sub': '${IAM_STACK_NAME}-EKSNodeRoleArn'
      InstanceTypes:
        - t3.medium
      CapacityType: SPOT
      ScalingConfig:
        DesiredSize: 2
        MinSize: 1
        MaxSize: 3
      DiskSize: 20
      Subnets:
        - !Split
            - ','
            - !ImportValue
              'Fn::Sub': '${NETWORK_STACK_NAME}-PrivateSubnetIds'
      Labels:
        workload: web-app

Outputs:
  ClusterName:
    Description: EKS Cluster Name
    Value: !GetAtt EKSCluster.Name
    Export:
      Name: !Sub '${AWS::StackName}-ClusterName'

  ClusterEndpoint:
    Description: EKS Cluster Endpoint
    Value: !GetAtt EKSCluster.Endpoint
    Export:
      Name: !Sub '${AWS::StackName}-ClusterEndpoint'

  OIDCProviderArn:
    Description: OIDC Provider ARN
    Value: !GetAtt EKSOIDCProvider.IdentityProviderArn
    Export:
      Name: !Sub '${AWS::StackName}-OIDCProviderArn'

  GPUNodeGroupName:
    Description: GPU Node Group Name
    Value: !Ref GPUNodeGroup
    Export:
      Name: !Sub '${AWS::StackName}-GPUNodeGroupName'

  CPUNodeGroupName:
    Description: CPU Node Group Name
    Value: !Ref CPUNodeGroup
    Export:
      Name: !Sub '${AWS::StackName}-CPUNodeGroupName'

